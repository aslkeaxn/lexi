generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  firebaseId String
  username   String

  projects Project[]
}

model Language {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  code String

  languageProjects ProjectLanguage[]
}

model Project {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  projectLanguages ProjectLanguage[]
}

model ProjectLanguage {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  languageId String   @db.ObjectId
  language   Language @relation(fields: [languageId], references: [id])
  projectId  String   @db.ObjectId
  project    Project  @relation(fields: [projectId], references: [id])
}

model Namespace {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  items Item[]
}

enum ItemType {
  Group
  Text
}

model Item {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  key      String
  value    String?
  itemType ItemType

  namespaceId String    @db.ObjectId
  namespace   Namespace @relation(fields: [namespaceId], references: [id])
  parentId    String?   @db.ObjectId
  parent      Item?     @relation("GCT", fields: [parentId], references: [id], onUpdate: NoAction, onDelete: NoAction)

  children Item[] @relation("GCT")
}
